@model Sociatis.Models.Companies.ViewCompanyViewModel


<div id="viewCompany" class="ContentBox">



    @if (Model.CitizenWorkingSite)
    {

        if (Model.CanWork)
        {
            if (IsSectionDefined("CanWork") == false)
            {
                <div class="text-center" style="margin-top:0.3rem">
                    <a id="workButton" class="green button work eliminateButtonMargin" href="@Url.Action("Work", "Company", new { ID = Model.Info.CompanyID })">Work</a>
                </div>
            }
            else
            {
                @RenderSection("CanWork")
            }

        }
        else if (Model.ProduceAmount > 0)
        {
            if (IsSectionDefined("ProducedAmount") == false)
            {
                <h3 id="workResult" class="text-center">
                    You worked today and you had produced <b>@Model.ProduceAmount</b> stock. <br />
                    You worked @Model.DayWorkInRow day@(PluralHelper.S(Model.DayWorkInRow)) in row
                </h3>
            }
            else
            {
                @RenderSection("ProducedAmount")
            }

            <hr />
        }
        else
        {
            if (IsSectionDefined("CannotWork") == false)
            {
                <div class="text-center font-big" style="margin-top:0.3rem">
                    <button type="button" class="green work disabled button eliminateButtonMargin has-tip" ole="tooltip" data-tooltip aria-haspopup="true" title="@Model.CannotWorkReason">Work</button>
                </div>
            }
            else
            {
                @RenderSection("CannotWork")
            }
        }
    }

    @RenderBody();

    @if (IsSectionDefined("Production") == false)
    {
        <div class="row">

            @if (Model.ProductionRequirements.Count > 0)
            {
                <div class="medium-6 columns">

                    <h4>Required raws</h4>
                    <div class="row small-up-1 medium-up-2">
                        @foreach (var requirement in Model.ProductionRequirements)
                        {
                            <div class="column column-block">
                                @Html.DisplayFor(m => requirement)
                            </div>
                        }
                    </div>
                </div>
                <div class="medium-2 columns">
                    &nbsp;
                </div>
            }
            @if (Model.ProductionRequirements.Count == 0)
            {
                <div class="medium-4 columns">&nbsp;</div>
            }
            <div class="medium-4 columns">
                <h4 class="text-center">Stock</h4>
                <div class="row">
                    <div class="hide-for-small-only medium-1 large-2 columns">
                        &nbsp;
                    </div>
                    <div class="small-12 medium-10 large-8 columns">
                        @Html.DisplayFor(m => m.Stock)
                    </div>
                    <div class="hide-for-small-only medium-1 large-2 columns">
                        &nbsp;
                    </div>
                </div>
            </div>
            @if (Model.ProductionRequirements.Count == 0)
            {
                <div class="medium-4 columns">&nbsp;</div>
            }
        </div>
    }
    else
    {
        @RenderSection("Production")
    }


    @if (IsSectionDefined("Progress") == false)
    {
        <div class="centerHorizontalFlex">
            <div title="queue: @(Model.Queue * 100.0)%" class="container-bar productionQueue">
                <div class="queue-bar" style="width : @(Model.Queue * 100.0)%;">
                </div>

            </div>
        </div>
    }
    else
    {
        @RenderSection("Progress")
    }


    <hr />

    @Html.DisplayFor(m => m.Employees)

</div>

@Html.DisplayFor(m => m.Statistics)